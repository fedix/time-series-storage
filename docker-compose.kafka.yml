version: '3'
services:
  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181
  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
  ch-1:
    image: yandex/clickhouse-server
    restart: always
    volumes:
      - ./clickhouse/tables.sql:/docker-entrypoint-initdb.d/tables.sql
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/macros/macros-1.xml:/etc/clickhouse-server/config.d/macros.xml
    ports:
      - "8123:8123"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  ch-2:
    image: yandex/clickhouse-server
    restart: always
    volumes:
      - ./clickhouse/tables.sql:/docker-entrypoint-initdb.d/tables.sql
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/macros/macros-2.xml:/etc/clickhouse-server/config.d/macros.xml
    ports:
      - "8124:8123"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  ch-3:
    image: yandex/clickhouse-server
    restart: always
    volumes:
      - ./clickhouse/tables.sql:/docker-entrypoint-initdb.d/tables.sql
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/macros/macros-3.xml:/etc/clickhouse-server/config.d/macros.xml
    ports:
      - "8125:8123"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  ch-4:
    image: yandex/clickhouse-server
    restart: always
    volumes:
      - ./clickhouse/tables.sql:/docker-entrypoint-initdb.d/tables.sql
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/macros/macros-4.xml:/etc/clickhouse-server/config.d/macros.xml
    ports:
      - "8126:8123"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  ch-5:
    image: yandex/clickhouse-server
    restart: always
    volumes:
      - ./clickhouse/tables.sql:/docker-entrypoint-initdb.d/tables.sql
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/macros/macros-5.xml:/etc/clickhouse-server/config.d/macros.xml
    ports:
      - "8127:8123"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  ch-6:
    image: yandex/clickhouse-server
    restart: always
    volumes:
      - ./clickhouse/tables.sql:/docker-entrypoint-initdb.d/tables.sql
      - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml
      - ./clickhouse/macros/macros-6.xml:/etc/clickhouse-server/config.d/macros.xml
    ports:
      - "8128:8123"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  kafka-1:
    build: ./kafka
    restart: always
    ports:
      - "19092:19092"
      - "19093:19093"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:19092,INSIDE://:19093
      KAFKA_LISTENERS: OUTSIDE://:19092,INSIDE://:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml -Xmx5G -Xms3G
    depends_on:
      - zoo1 
      - zoo2
      - zoo3
  kafka-2:
    build: ./kafka
    restart: always
    ports:
      - "29092:29092"
      - "29093:29093"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INSIDE://:29093
      KAFKA_LISTENERS: OUTSIDE://:29092,INSIDE://:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml -Xmx5G -Xms3G
    depends_on:
      - zoo1 
      - zoo2
      - zoo3
  kafka-3:
    build: ./kafka
    restart: always
    ports:
      - "39092:39092"
      - "39093:39093"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:39092,INSIDE://:39093
      KAFKA_LISTENERS: OUTSIDE://:39092,INSIDE://:39093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml -Xmx5G -Xms3G
    depends_on:
      - zoo1 
      - zoo2
      - zoo3
  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    restart: always
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:19093,PLAINTEXT://kafka-2:29093
    depends_on:
      - kafka-1
      - kafka-2
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    restart: always
    hostname: kafka-topics-ui
    ports:
      - "8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - kafka-rest-proxy
  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - kafka-1
      - kafka-2
  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
#    volumes:
#      - ./grafana:/var/lib/grafana
